swagger: "2.0"
info:
  description: Swagger 5GENESIS Validator
  version: 1.0.0
  title: 5GENESIS Validator Swagger
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: javier.melian@atos.net
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5002"
basePath: /
tags:
  - name: Validator
    description: Experiment descriptor validation and network service validation (VNFD + NSD)
schemes:
  - http
paths:
  /ed:
    get:
      tags:
        - Validator
      summary: "List registered Experiment descriptors"
      description: ""
      operationId: listED
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: "List of experiments"
          schema:
            $ref: "#/definitions/ArrayOfExperiments"
        "400":
          description: "Problem while obtaining the list of experiments"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /ed/{exp_id}:
    get:
      tags:
        - Validator
      summary: "List a specific Experiment descriptor"
      description: ""
      operationId: getED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: exp_id
          in: path
          description: "_id of the experiment descriptor"
          required: true
          type: string
      responses:
        "200":
          description: "List of experiments"
          schema:
            $ref: "#/definitions/Mongo_experiment_descriptor"
        "400":
          description: "Problem while retrieving the experiment"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: "Descriptor not found in the database"
          schema:
            $ref: "#/definitions/ResponseDetails"
    delete:
      tags:
        - Validator
      summary: "Delete a specific Experiment descriptor from the database"
      description: ""
      operationId: deleteED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: exp_id
          in: path
          description: "_id of the experiment descriptor"
          required: true
          type: string
      responses:
        "204":
          description: "Experiment descriptor deleted"
        "400":
          description: "Problem while deleting the experiment"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: "Descriptor not found in the database"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validate/ed:
    post:
      tags:
        - Validator
      summary: "Validate Experiment descriptor"
      description: ""
      operationId: validateED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Experiment descriptor in JSON format"
          schema:
            $ref: "#/definitions/Experiment_descriptor"
          required: true
      responses:
        "200":
          description: "Successful validation"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "400":
          description: "Entry badly formed"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /create/ed:
    post:
      tags:
        - Validator
      summary: "Validate Experiment descriptor, send it to the ELCM and store is in the internal database"
      description: ""
      operationId: onboardED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: "Experiment descriptor in JSON format"
          schema:
            $ref: "#/definitions/Experiment_descriptor"
          required: true
      responses:
        "200":
          description: "Successful validation. Returns the _id of the inserted experiment"
          schema:
            $ref: "#/definitions/Object_id"
        "400":
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validate/vnfd:
    post:
      tags:
        - Validator
      summary: "Validate VNFD"
      description: ""
      operationId: validateVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: "VNFD Package"
          required: true
          type: file
      responses:
        "200":
          description: "Valid VNFD"
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: "Descriptor with failures"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: "Problem while getting the vnfd the file"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /onboard/vnfd:
    post:
      tags:
        - Validator
      summary: "Validate VNFD and add it to the catalogue"
      description: ""
      operationId: onboardVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: "VNFD Package"
          required: true
          type: file
      responses:
        "201":
          description: "VNFD created"
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: "Descriptor with failures"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: "Conflict - VNFD already present"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: "Problem while getting the vnfd the file"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: "Internal server error - Network problems"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validate/nsd:
    post:
      tags:
        - Validator
      summary: "Validate NSD"
      description: ""
      operationId: validateNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: "NSD Package"
          required: true
          type: file
      responses:
        "200":
          description: "Valid NSD"
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: "Descriptor with failures"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: "Problem while getting the nsd the file"
          schema:
            $ref: "#/definitions/ResponseDetails"
  /onboard/nsd:
    post:
      tags:
        - Validator
      summary: "Validate NSD and add it to the catalogue"
      description: ""
      operationId: onboardNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: "NSD Package"
          required: true
          type: file
      responses:
        "201":
          description: "NSD created"
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: "Descriptor with failures"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: "Conflict - NSD already present"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: "Problem while getting the nsd the file"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: "Internal server error - Network problems"
          schema:
            $ref: "#/definitions/ResponseDetails"
definitions:
  ObjectID:
    type: object
    properties:
      id:
        type: string
        example: "123e4567-e89b-12d3-a456-426655440000"
  ResponseDetails:
    type: object
    properties:
      detail:
        type: string
      status:
        type: integer
      code:
        type: string
    required:
      - status
      - detail
  Experiment_descriptor:
    type: object
    properties:
      Id:
        type: integer
        format: int64
        example: 123
      Name:
        type: string
        example: "sfafd"
      User:
        type: integer
        format: int64
        example: 12345
      Platform:
        type: string
        example: "malaga"
      TestCases:
        type: array
        example:
          - "TC1"
          - "TC2"
        items:
          type: string
      UEs:
        type: array
        example:
          - "UE1"
          - "UE2"
        items:
          type: string
      Slice:
        type: string
        example: "slice_id"
      NS:
        type: string
        example: "ns_id"
      NS_Placement:
        type: string
        example: "Edge"
      Limited:
        type: boolean
        example: true
      Type_experiment:
        type: boolean
        example: false
      Scenario:
        type: array
        example:
          - "scenario1"
          - "scemarop2"
        items:
          type: string
      Application:
        type: array
        example:
          - "app1"
        items:
          type: string
      Attended:
        type: boolean
        example: true
      Reservation_time:
        type: integer
        format: int64
        example: 60
  Object_id:
    type: object
    properties:
      _id:
        type: string
        example: "5e23602463013ef934bff6e5"
  ArrayOfExperiments:
    type: array
    items:
      $ref: "#/definitions/Mongo_experiment_descriptor"
  Mongo_experiment_descriptor:
    type: object
    properties:
      _id:
        type: string
        example: "5e22e33fc72cffeca34f72a3"
      Id:
        type: integer
        format: int64
        example: 123
      Name:
        type: string
        example: "sfafd"
      User:
        type: integer
        format: int64
        example: 12345
      Platform:
        type: string
        example: "malaga"
      TestCases:
        type: array
        example:
          - "TC1"
          - "TC2"
        items:
          type: string
      UEs:
        type: array
        example:
          - "UE1"
          - "UE2"
        items:
          type: string
      Slice:
        type: string
        example: "slice_id"
      NS:
        type: string
        example: "ns_id"
      NS_Placement:
        type: string
        example: "Edge"
      Limited:
        type: boolean
        example: true
      Type_experiment:
        type: boolean
        example: false
      Scenario:
        type: array
        example:
          - "scenario1"
          - "scemarop2"
        items:
          type: string
      Application:
        type: array
        example:
          - "app1"
        items:
          type: string
      Attended:
        type: boolean
        example: true
      Reservation_time:
        type: integer
        format: int64
        example: 60      
