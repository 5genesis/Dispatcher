swagger: "2.0"
info:
  description: Swagger 5GENESIS Dispatcher
  version: 1.0.0
  title: 5GENESIS Dispatcher Swagger
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: javier.melian@atos.net
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "DISPATCHER:8082"
basePath: /
tags:
  - name: MANO
    description: MANO catalogue operations
  - name: Validator
    description: Experiment descriptor validation and network service validation (VNFD + NSD)
  - name: Auth
    description: Operations for users in order to access to the different microservices
  - name: "Auth: Admin Functions"
    description: Operations for Admin for managing the  user Auth
schemes:
  - http
paths:
  /mano/vnfd:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Add a new VNFD to the catalogue
      description: ""
      operationId: addVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "201":
          description: VNFD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ProblemDetails"
        "409":
          description: Conflict - VNFD already present
          schema:
            $ref: "#/definitions/ProblemDetails"
        "422":
          description: Unprocessable entity
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
    get:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: List all available VNFDs
      description: List all available VNFDs as a json collection
      operationId: listVNFDs
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ArrayOfVnfd"
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
  "/mano/vnfd/{vnfdId}":
    get:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Find VNFD by id
      description: Returns a single VNFD
      operationId: getVNFDById
      produces:
        - application/json
      parameters:
        - name: vnfdId
          in: path
          description: ID of VNFD to return
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/VnfDescriptor"
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/String"
        "500":
          description: Internal server error - Network problems
    delete:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Deletes a VNFD
      description: Deletes a VNFD given its _id
      operationId: deleteVNFD
      produces:
        - application/json
      parameters:
        - name: vnfdId
          in: path
          description: VNFD _id to delete
          required: true
          type: string
      responses:
        "204":
          description: VNFD successfully deleted
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/ProblemDetails"
        "409":
          description: Conflict - VNFD referenced by at least one NSD
          schema:
            $ref: "#/definitions/ProblemDetails"
    put:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Updates a VNFD providing the new VNFD package and the _ID of the old one that is being updated
      description: ""
      operationId: updateVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
        - name: vnfdId
          in: path
          description: VNFD _id to update
          required: true
          type: string
      responses:
        "201":
          description: VNFD successfully updated
        "400":
          description: Invalid VNFD _ID supplied
        "404":
          description: VNFD not found
        "409":
          description: There was a conflict when updating this VNFD
  /mano/nsd:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Add a new NSD to the catalogue
      description: ""
      operationId: addNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "201":
          description: NSD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ProblemDetails"
        "409":
          description: Conflict - NSD already present
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
    get:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: List all available NSDs
      description: List all available NSDs as a json collection
      operationId: listNSDs
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ArrayOfNsd"
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
  "/mano/nsd/{nsdId}":
    get:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Find NSD by name
      description: Returns a single NSD identified by its name
      operationId: getNSDByName
      produces:
        - application/json
      parameters:
        - name: nsdId
          in: path
          description: Name of the NSD to return
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NsDescriptor"
        "404":
          description: NSD not found
        "500":
          description: Internal server error - Network problems
    delete:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Deletes an NSD by _ID
      description: ""
      operationId: deleteNSD
      produces:
        - application/json
      parameters:
        - name: nsdId
          in: path
          description: NSD id to delete
          required: true
          type: string
      responses:
        "204":
          description: NSD successfully deleted
        "400":
          description: Invalid NS _ID supplied
        "404":
          description: NSD not found
    put:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Updates an NSD providing the new NSD package and the _ID of the old one that is being updated
      description: ""
      operationId: updateNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
        - name: nsdId
          in: path
          description: NSD _id to update
          required: true
          type: string
      responses:
        "201":
          description: NSD successfully updated
        "400":
          description: Invalid NS _ID supplied
        "404":
          description: NSD not found
        "409":
          description: There was a conflict when updating this NSD
          schema:
            $ref: "#/definitions/ProblemDetails"
  "/mano/vims":
    get:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Retrieves the list of registered VIMs in the mano.conf file 
      description: ""
      operationId: getVIMs
      produces:
        - application/json
      responses:
        "200":
          description: List of VIMs
          schema:
            $ref: "#/definitions/VimList"
        "400":
          description: Bad request
  "/mano/image/{vim_name}":
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - MANO
      summary: Upload an image file in the VIM
      description: ""
      operationId: addImage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: image
          in: formData
          description: Image file
          required: true
          type: file
        - name: vim_name
          in: path
          description: Name of the VIM
          required: true
          type: string
        - name: disk_format
          in: query
          description: "Disk format: raw, qcow2..."
          required: true
          type: string
        - name: container_format
          in: query
          description: "Container format: bare"
          required: true
          type: string
      responses:
        "201":
          description: "Image uploaded. Image status: active"
          schema:
            $ref: "#/definitions/String_image"
        "406":
          description: Not acceptable - File not valid
        "413":
          description: File too large
        "500":
          description: Internal server error - Service is not accessible
  /validator/validate/ed:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - Validator
      summary: Validate Experiment descriptor
      description: ""
      operationId: validateED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Experiment descriptor in JSON format
          schema:
            $ref: "#/definitions/Experiment_descriptor"
          required: true
      responses:
        "200":
          description: Successful validation
          schema:
            $ref: "#/definitions/String_ok"
        "400":
          description: Invalid input
        "500":
          description: Entry badly formed
          schema:
            $ref: "#/definitions/String"
  /validator/onboard/ed:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - Validator
      summary: Validate Experiment descriptor and onboard it in the ELCM
      description: ""
      operationId: onboardED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Experiment descriptor in JSON format
          schema:
            $ref: "#/definitions/Experiment_descriptor"
          required: true
      responses:
        "200":
          description: Successful validation
        "400":
          description: Invalid input
        "500":
          description: Internal server error - No connection to the service or the ELCM
  /validator/validate/vnfd:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - Validator
      summary: Validate VNFD
      description: ""
      operationId: validateVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "200":
          description: Valid VNFD
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/String"
        "500":
          description: Internal server error - Network problems
  /validator/onboard/vnfd:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - Validator
      summary: Validate VNFD and add it to the catalogue
      description: ""
      operationId: onboardVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "201":
          description: VNFD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/String"
        "409":
          description: Conflict - VNFD already present
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
  /validator/validate/nsd:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - Validator
      summary: Validate NSD
      description: ""
      operationId: validateNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "200":
          description: Valid NSD
          schema:
            $ref: "#/definitions/String_ok"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/String"
        "500":
          description: Internal server error - Network problems
  /validator/onboard/nsd:
    post:
      security:
        - basicAuth: []
        - BearerToken: []
      tags:
        - Validator
      summary: Validate NSD and add it to the catalogue
      description: ""
      operationId: onboardNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "201":
          description: NSD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/String"
        "409":
          description: Conflict - NSD already present
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
  /auth/get_token:
    get:
      security:
        - basicAuth: []
        - BearerToken: []
      description: "TODO: Add Description"
      summary: Get token
      tags:
        - Auth
      operationId: Gettoken
      deprecated: false
      produces:
        - application/json
      parameters: []
      responses:
        "200":
          description: "Access token"
          headers: {}
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "500":
          description: Internal server error - Network problems
  /auth/change_password:
    put:
      security:
        - basicAuth: []
        - BearerToken: []
      description: "TODO: Add Description"
      summary: Change Password
      tags:
        - Auth
      operationId: ChangePassword
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: password
          in: formData
          required: true
          type: string
          description: ""
      responses:
        "200":
          description: "Password change message"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "500":
          description: Internal server error - Network problems
  /auth/register:
    post:
      description: "TODO: Add Description"
      summary: Register User
      tags:
        - Auth
      operationId: RegisterUser
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: password
          in: formData
          required: true
          type: string
          description: ""
        - name: username
          in: formData
          required: true
          type: string
          description: ""
        - name: email
          in: formData
          required: true
          type: string
          description: ""
      responses:
        "200":
          description: "Successful registration"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
  /auth/recover_password:
    put:
      description: "TODO: Add Description"
      summary: Recover Password
      tags:
        - Auth
      operationId: RecoverPassword
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: email
          in: formData
          required: true
          type: string
          description: ""
      responses:
        "200":
          description: "New password has been sent to your email"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "500":
          description: Internal server error - Network problems
  /auth/show_users:
    get:
      security:
        - basicAuth: []
      description: "TODO: Add Description"
      summary: Show Users
      tags:
        - "Auth: Admin Functions"
      operationId: ShowUsers
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: verbose
          in: query
          required: true
          type: boolean
          description: ""
      responses:
        "200":
          description: "List of registered users - traces on verbose mode"
          headers: {}
          schema:
            $ref: "#/definitions/AuthUsers"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "401":
          description: "Invalid permission"
          headers: {}
          schema:
            $ref: "#/definitions/AuthError"
        "500":
          description: Internal server error - Network problems or Auth not included
  /auth/validate_user/{username}:
    put:
      security:
        - basicAuth: []
      description: "Manual validation of a user after the resgistration form"
      summary: Validate User
      tags:
        - "Auth: Admin Functions"
      operationId: ValidateUser
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: username
          in: path
          required: true
          type: string
          description: ""
      responses:
        "200":
          description: "Changes applied - user validated"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "401":
          description: "Invalid permission"
          headers: {}
          schema:
            $ref: "#/definitions/AuthError"
  /auth/drop_db:
    delete:
      security:
        - basicAuth: []
      description: "TODO: Add Description"
      summary: Drop DB
      tags:
        - "Auth: Admin Functions"
      operationId: DropDB
      deprecated: false
      produces:
        - application/json
      parameters: []
      responses:
        "200":
          description: "User database dropped"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "401":
          description: "Invalid permission"
          headers: {}
          schema:
            $ref: "#/definitions/AuthError"
  /auth/delete_user/{username}:
    delete:
      security:
        - basicAuth: []
      description: "Deletes a user from the DB"
      summary: Delete User
      tags:
        - "Auth: Admin Functions"
      operationId: DeleteUser
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: username
          in: path
          required: true
          type: string
          description: ""
      responses:
        "200":
          description: "User removed"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "400":
          description: "Auth error"
          headers: {}
          schema:
            $ref: "#/definitions/AuthMsg"
        "401":
          description: "Invalid permission"
          headers: {}
          schema:
            $ref: "#/definitions/AuthError"
definitions:
  ObjectID:
    type: object
    properties:
      id:
        type: string
        example: "123e4567-e89b-12d3-a456-426655440000"
  NsDescriptor:
    type: string
    format: json
  ArrayOfNsd:
    type: array
    items:
      $ref: "#/definitions/NsDescriptor"
  VnfDescriptor:
    type: string
    format: json
  ArrayOfVnfd:
    type: array
    items:
      $ref: "#/definitions/VnfDescriptor"
  ProblemDetails:
    type: object
    properties:
      detail:
        type: string
        example: "invalid file content file could not be opened successfully"
      status:
        type: integer
        example: 400
      code:
        type: string
        example: "BAD_REQUEST"
    required:
      - status
      - detail
  VnfdPackage:
    type: string
    format: binary
  NsdPackage:
    type: string
    format: binary
  String:
    type: string
  String_ok:
    type: string
    example: "ok"
  String_image:
    type: string
    example: "Image status: active"
  Vim:
    type: object
    properties:
      name:
        type: string
        example: "malagacore"
      type:
        type: string
        example: "openstack"
      location:
        type: string
        example: "core"
  VimList:
    type: array
    items:
      $ref: "#/definitions/Vim"
  Experiment_descriptor:
    type: object
    properties:
      Id:
        type: integer
        format: int64
        example: 123
      Name:
        type: string
        example: "sfafd"
      User:
        type: integer
        format: int64
        example: 12345
      Platform:
        type: string
        example: "malaga"
      TestCases:
        type: array
        example:
          - "TC1"
          - "TC2"
        items:
          type: string
      UEs:
        type: array
        example:
          - "UE1"
          - "UE2"
        items:
          type: string
      Slice:
        type: string
        example: "slice_id"
      NS:
        type: string
        example: "ns_id"
      NS_Placement:
        type: string
        example: "Edge"
      Limited:
        type: boolean
        example: true
      Type_experiment:
        type: boolean
        example: false
      Scenario:
        type: array
        example:
          - "scenario1"
          - "scemarop2"
        items:
          type: string
      Application:
        type: array
        example:
          - "app1"
        items:
          type: string
      Attended:
        type: boolean
        example: true
      Reservation_time:
        type: integer
        format: int64
        example: 60
  Token:
    type: object
    properties:
      result:
        type: string
        example: "eyJhbGciOiJBMjU2S1ciLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIn0.oqf4Xejq32YuFxu6FoYyv-ZQnEe0Wxt-VW2yqt-Db2PlX44CZN_H-_2Ku40OHq0000ATo2SPWlbT5g6moNiDgO"
  AuthMsg:
    type: object
    properties:
      result:
        type: string
        example: "Auth service message"
  AuthError:
    type: object
    properties:
      result:
        type: string
        example: "Invalid Permission"
  AuthUsers:
    type: object
    properties:
      result:
        type: object
        properties:
          usename:
            type: object
            properties:
              active:
                type: boolean
              deleted:
                type: boolean
                example: false
              email:
                type: string
                example: "5genesismanagement@gmail.com"
              traces:
                type: array
                items: 
                  type: object
                  properties:
                    action: 
                      type: string
                      example: "GetToken"
                    date:
                      type: string
                      example: "2020-01-09 11:22:32.772248"
                  
                
securityDefinitions:
  basicAuth:
    type: basic
  BearerToken:
    type: apiKey
    name: Authorization
    in: header
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
