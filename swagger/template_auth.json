{
  "openapi": "3.0.1",
  "info": {
    "title": "5GENESIS Dispatcher Swagger",
    "description": "Swagger 5GENESIS Dispatcher",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "luis.gomez.external@atos.net"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.6.3"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://10.0.2.15:8082/"
    }
  ],
  "tags": [
    {
      "name": "MANO",
      "description": "MANO OSM Repository and VIM operations"
    },
    {
      "name": "Auth",
      "description": "Operations for users in order to access to the different microservices"
    },
    {
      "name": "Auth: Admin Functions",
      "description": "Operations for Admin for managing the user Auth"
    }
  ],
  "paths": {
    "/mano/vnfd": {
      "post": {
        "tags": [
          "MANO"
        ],
        "summary": "Add a VNFD or new VNFD version to the repository",
        "description": "This request accepts 1 to many VNFs files. The file first is validated with the images dependencies and syntactic analysis.",
        "operationId": "addVNFD",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "visibility": {
                    "type": "boolean"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "VNFs Added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "VNFs": {
                      "type": "object",
                      "properties": {
                        "hackfest_1_vnfd_fixed.tar.gz": {
                          "type": "string",
                          "example": "VNF added"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "VNFs not uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "VNFs": {
                      "type": "object",
                      "properties": {
                        "hackfest_1_vnfd_fixed.tar.gz": {
                          "type": "string",
                          "example": "VNFD with this version already exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      },
      "get": {
        "tags": [
          "MANO"
        ],
        "summary": "List VNFDs located in the repository",
        "description": "This request list all the VNFDs located in the repository.",
        "operationId": "ListVNFDs",
        "responses": {
          "200": {
            "description": "List of VNFDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "hackfest-vnf"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/mano/nsd": {
      "post": {
        "tags": [
          "MANO"
        ],
        "summary": "Add a NSD or new NSD version to the repository",
        "description": "This request accepts 1 NS file. The file first is validated with the VNFDs dependencies and syntactic analysis.",
        "operationId": "addNSD",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "visibility": {
                    "type": "boolean"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "NSs uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "NSs": {
                      "type": "object",
                      "properties": {
                        "hackfest_1_nsd_fixed.tar.gz": {
                          "type": "string",
                          "example": "NSD added"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "NSs not uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "NSs": {
                      "type": "object",
                      "properties": {
                        "hackfest_1_nsd_fixed.tar.gz": {
                          "type": "string",
                          "example": "NSD with this version already exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      },
      "get": {
        "tags": [
          "MANO"
        ],
        "summary": "List NSDs located in the repository",
        "description": "This request list all the NSDs located in the repository.",
        "operationId": "ListNSD",
        "responses": {
          "200": {
            "description": "List of NSDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "hackfest-ns"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/mano/image": {
      "post": {
        "tags": [
          "MANO"
        ],
        "summary": "Upload an image file in the VIM",
        "operationId": "addImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file",
                  "vim_id"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "vim_id": {
                    "type": "string"
                  },
                  "container_format": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image uploaded. Image status: active",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "<SPECIFIC_ERROR_MESAGE>"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Image file not in the request or request badly formed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "<SPECIFIC_ERROR_MESAGE>"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Service is not accessible",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/mano/vims": {
      "get": {
        "tags": [
          "MANO"
        ],
        "summary": "Retrieves the list of registered VIMs in the mano.conf file",
        "operationId": "getVIMs",
        "responses": {
          "200": {
            "description": "List of VIMs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VimList"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "<SPECIFIC_ERROR_MESAGE>"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/mano/onboard": {
      "post": {
        "tags": [
          "MANO"
        ],
        "summary": "Onboard a NS into OSM",
        "description": "Onboard one NS and their dependencies (VNFs) from the repository to OSM",
        "operationId": "OnboardNS",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "ns"
                ],
                "properties": {
                  "ns": {
                    "type": "string",
                    "example": "hackfest-ns"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ns Onboarded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "193n4h-2j3i2n2-k1jndi2-i2o3n3u2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Ns not Onboarded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "<Error>"
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "NS hackfest-ns can not be onboarded"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/mano/nsd/{nsdId}": {
      "delete": {
        "tags": [
          "MANO"
        ],
        "summary": "Deletes an NSD by _ID",
        "operationId": "deleteNSD",
        "parameters": [
          {
            "name": "nsdId",
            "in": "path",
            "description": "NSD id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NSD successfully deleted",
            "content": {}
          },
          "400": {
            "description": "Invalid NS _ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "<SPECIFIC_ERROR_MESAGE>"
                    },
                    "code": {
                      "type": "string",
                      "example": "<Error Type>"
                    },
                    "status": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/auth/get_token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get token by Basic Auth",
        "description": "Proccess for obtain the user token from a Basic Auth",
        "operationId": "Gettoken",
        "responses": {
          "200": {
            "description": "Access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/change_password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Change Password",
        "description": "Process for changing the password",
        "operationId": "ChangePassword",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "user-pass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password change message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User in the platform (But not activated)",
        "description": "Register user in the platform",
        "operationId": "RegisterUser",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "username",
                  "email"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "user"
                  },
                  "email": {
                    "type": "string",
                    "example": "user-email"
                  },
                  "password": {
                    "type": "string",
                    "example": "user-pass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/auth/recover_password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Recover Password by email",
        "description": "Process for recovering the password by email",
        "operationId": "RecoverPassword",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user-email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New password has been sent to your email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems",
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/auth/show_users": {
      "get": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Show all the users in the platform",
        "description": "Show all the current users in the platform",
        "operationId": "ShowUsers",
        "parameters": [
          {
            "name": "verbose",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of registered users - traces on verbose mode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthUsers"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "401": {
            "description": "Invalid permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Network problems or Auth not included",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/validate_user/{username}": {
      "put": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Validate registered users",
        "description": "Manual validation of a user after the resgistration form",
        "operationId": "ValidateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changes applied - user validated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "401": {
            "description": "Invalid permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/drop_db": {
      "delete": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Drop Users DB",
        "description": "Drop operation for users DB",
        "operationId": "DropDB",
        "responses": {
          "200": {
            "description": "User database dropped",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "401": {
            "description": "Invalid permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/delete_user/{username}": {
      "delete": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Delete a specific User",
        "description": "Deletes a user from the DB",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User removed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "400": {
            "description": "Auth error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMsg"
                }
              }
            }
          },
          "401": {
            "description": "Invalid permission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/register_platform_in_platform": {
      "post": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Register this current Platform in another platform",
        "description": "Registrer this current platform in another platfom for allowing distribute experiments",
        "operationId": "RegisterPlatform",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "ip"
                ],
                "properties": {
                  "ip": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/show_platforms": {
      "get": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Show all the current platforms",
        "description": "Show all the current platforms in the System",
        "operationId": "ShowPlatforms",
        "parameters": [
          {
            "name": "activated",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/auth/validate_platform/{platform_name}": {
      "put": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Validate Platform for distributing experiments",
        "description": "Validate a specific platform in this current platform",
        "operationId": "ValidatePlatform",
        "parameters": [
          {
            "name": "platform_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/delete_platform/{platformName}": {
      "delete": {
        "tags": [
          "Auth: Admin Functions"
        ],
        "summary": "Delete Platform",
        "description": "Delete a specific Platform",
        "operationId": "DeletePlatform",
        "parameters": [
          {
            "name": "platformName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Vim": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "malagacore"
          },
          "type": {
            "type": "string",
            "example": "openstack"
          },
          "location": {
            "type": "string",
            "example": "core"
          }
        }
      },
      "VimList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Vim"
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "eyJhbGciOiJBMjU2S1ciLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIn0.oqf4Xejq32YuFxu6FoYyv-ZQnEe0Wxt-VW2yqt-Db2PlX44CZN_H-_2Ku40OHq0000ATo2SPWlbT5g6moNiDgO"
          }
        }
      },
      "AuthMsg": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "Not valid token given"
          }
        }
      },
      "AuthError": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "Invalid Permission"
          }
        }
      },
      "AuthUsers": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "usename": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "deleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "email": {
                    "type": "string",
                    "example": "5genesismanagement@gmail.com"
                  },
                  "traces": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "example": "GetToken"
                        },
                        "date": {
                          "type": "string",
                          "example": "2020-01-09T11:22:32.772Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerToken": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}