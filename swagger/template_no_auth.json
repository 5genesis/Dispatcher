swagger: "2.0"
info:
  description: Swagger 5GENESIS Dispatcher
  version: 1.0.0
  title: 5GENESIS Dispatcher Swagger
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: javier.melian@atos.net
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "DISPATCHER:8082"
basePath: /
tags:
  - name: MANO
    description: MANO catalogue operations
  - name: Validator
    description: Experiment descriptor validation and network service validation (VNFD + NSD)
schemes:
  - http
paths:
  /mano/vnfd:
    post:
      tags:
        - MANO
      summary: Add a new VNFD to the catalogue
      description: ""
      operationId: addVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "201":
          description: VNFD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: Conflict - VNFD already present
          schema:
            $ref: "#/definitions/ResponseDetails"
        "422":
          description: Unprocessable entity
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
    get:
      tags:
        - MANO
      summary: List all available VNFDs
      description: List all available VNFDs as a json collection
      operationId: listVNFDs
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ArrayOfVnfd"
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
  "/mano/vnfd/{vnfdId}":
    get:
      tags:
        - MANO
      summary: Find VNFD by id
      description: Returns a single VNFD
      operationId: getVNFDById
      produces:
        - application/json
      parameters:
        - name: vnfdId
          in: path
          description: ID of VNFD to return
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/VnfDescriptor"
        "400":
          description: "Invalid status value"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
    delete:
      tags:
        - MANO
      summary: Deletes a VNFD
      description: Deletes a VNFD given its _id
      operationId: deleteVNFD
      produces:
        - application/json
      parameters:
        - name: vnfdId
          in: path
          description: VNFD _id to delete
          required: true
          type: string
      responses:
        "204":
          description: VNFD successfully deleted
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: Conflict - VNFD referenced by at least one NSD
          schema:
            $ref: "#/definitions/ResponseDetails"
    put:
      tags:
        - MANO
      summary: Updates a VNFD providing the new VNFD package and the _ID of the old one that is being updated
      description: ""
      operationId: updateVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
        - name: vnfdId
          in: path
          description: VNFD _id to update
          required: true
          type: string
      responses:
        "201":
          description: VNFD successfully updated
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid VNFD _ID supplied
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: There was a conflict when updating this VNFD
          schema:
            $ref: "#/definitions/ResponseDetails"
  /mano/nsd:
    post:
      tags:
        - MANO
      summary: Add a new NSD to the catalogue
      description: ""
      operationId: addNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "201":
          description: NSD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: Conflict - NSD already present
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
    get:
      tags:
        - MANO
      summary: List all available NSDs
      description: List all available NSDs as a json collection
      operationId: listNSDs
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ArrayOfNsd"
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
  "/mano/nsd/{nsdId}":
    get:
      tags:
        - MANO
      summary: Find NSD by name
      description: Returns a single NSD identified by its name
      operationId: getNSDByName
      produces:
        - application/json
      parameters:
        - name: nsdId
          in: path
          description: Name of the NSD to return
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NsDescriptor"
        "404":
          description: NSD not found
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
    delete:
      tags:
        - MANO
      summary: Deletes an NSD by _ID
      description: ""
      operationId: deleteNSD
      produces:
        - application/json
      parameters:
        - name: nsdId
          in: path
          description: NSD id to delete
          required: true
          type: string
      responses:
        "204":
          description: NSD successfully deleted
        "400":
          description: Invalid NS _ID supplied
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: NSD not found
          schema:
            $ref: "#/definitions/ResponseDetails"
    put:
      tags:
        - MANO
      summary: Updates an NSD providing the new NSD package and the _ID of the old one that is being updated
      description: ""
      operationId: updateNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
        - name: nsdId
          in: path
          description: NSD _id to update
          required: true
          type: string
      responses:
        "201":
          description: NSD successfully updated
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid NS _ID supplied
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: NSD not found
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: There was a conflict when updating this NSD
          schema:
            $ref: "#/definitions/ResponseDetails"
  "/mano/vims":
    get:
      tags:
        - MANO
      summary: Retrieves the list of registered VIMs in the mano.conf file 
      description: ""
      operationId: getVIMs
      produces:
        - application/json
      responses:
        "200":
          description: List of VIMs
          schema:
            $ref: "#/definitions/VimList"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/ResponseDetails"
  "/mano/image/{vim_name}":
    post:
      tags:
        - MANO
      summary: Upload an image file in the VIM
      description: ""
      operationId: addImage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: image
          in: formData
          description: Image file
          required: true
          type: file
        - name: vim_name
          in: path
          description: Name of the VIM
          required: true
          type: string
        - name: disk_format
          in: query
          description: "Disk format: raw, qcow2..."
          required: true
          type: string
        - name: container_format
          in: query
          description: "Container format: bare"
          required: true
          type: string
      responses:
        "201":
          description: "Image uploaded. Image status: active"
          schema:
            $ref: "#/definitions/ResponseDetails"
        "406":
          description: Not acceptable - File not valid
          schema:
            $ref: "#/definitions/ResponseDetails"
        "413":
          description: File too large
          schema:
            $ref: "#/definitions/ResponseDetails"
        "422":
          description: Image file not in the request or request badly formed
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Service is not accessible
  "/validator/ed":
    get:
      tags:
        - Validator
      summary: List registered Experiment descriptors
      description: ""
      operationId: listED
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: List of experiments
          schema:
            $ref: "#/definitions/ArrayOfExperiments"
        "400":
          description: Problem while obtaining the list of experiments
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/ed/{exp_id}:
    get:
      tags:
        - Validator
      summary: List a specific Experiment descriptor
      description: ""
      operationId: getED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: exp_id
          in: path
          description: _id of the experiment descriptor
          required: true
          type: string
      responses:
        "200":
          description: List of experiments
          schema:
            $ref: "#/definitions/Mongo_experiment_descriptor"
        "400":
          description: Problem while retrieving the experiment
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: Descriptor not found in the database
          schema:
            $ref: "#/definitions/ResponseDetails"
    delete:
      tags:
        - Validator
      summary: Delete a specific Experiment descriptor from the database
      description: ""
      operationId: deleteED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: exp_id
          in: path
          description: _id of the experiment descriptor
          required: true
          type: string
      responses:
        "204":
          description: Experiment descriptor deleted
        "400":
          description: Problem while deleting the experiment
          schema:
            $ref: "#/definitions/ResponseDetails"
        "404":
          description: Descriptor not found in the database
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/validate/ed:
    post:
      tags:
        - Validator
      summary: Validate Experiment descriptor
      description: ""
      operationId: validateED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Experiment descriptor in JSON format
          schema:
            $ref: "#/definitions/Experiment_descriptor"
          required: true
      responses:
        "200":
          description: Successful validation
          schema:
            $ref: "#/definitions/ResponseDetails"
        "400":
          description: Entry badly formed
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/create/ed:
    post:
      tags:
        - Validator
      summary: Validate Experiment descriptor, send it to the ELCM and store is in the internal database
      description: ""
      operationId: onboardED
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Experiment descriptor in JSON format
          schema:
            $ref: "#/definitions/Experiment_descriptor"
          required: true
      responses:
        "200":
          description: Successful validation. Returns the _id of the inserted experiment
          schema:
            $ref: "#/definitions/Object_id"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/validate/vnfd:
    post:
      tags:
        - Validator
      summary: Validate VNFD
      description: ""
      operationId: validateVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "200":
          description: Valid VNFD
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: Problem while getting the vnfd the file
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/onboard/vnfd:
    post:
      tags:
        - Validator
      summary: Validate VNFD and add it to the catalogue
      description: ""
      operationId: onboardVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "201":
          description: VNFD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: Conflict - VNFD already present
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: Problem while getting the vnfd the file
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/validate/nsd:
    post:
      tags:
        - Validator
      summary: Validate NSD
      description: ""
      operationId: validateNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "200":
          description: Valid NSD
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: Problem while getting the nsd the file
          schema:
            $ref: "#/definitions/ResponseDetails"
  /validator/onboard/nsd:
    post:
      tags:
        - Validator
      summary: Validate NSD and add it to the catalogue
      description: ""
      operationId: onboardNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "201":
          description: NSD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Descriptor with failures
          schema:
            $ref: "#/definitions/ResponseDetails"
        "409":
          description: Conflict - NSD already present
          schema:
            $ref: "#/definitions/ResponseDetails"
        "412":
          description: Problem while getting the nsd the file
          schema:
            $ref: "#/definitions/ResponseDetails"
        "500":
          description: Internal server error - Network problems
          schema:
            $ref: "#/definitions/ResponseDetails"
definitions:
  ObjectID:
    type: object
    properties:
      id:
        type: string
        example: "123e4567-e89b-12d3-a456-426655440000"
  NsDescriptor:
    type: string
    format: json
  ArrayOfNsd:
    type: array
    items:
      $ref: "#/definitions/NsDescriptor"
  VnfDescriptor:
    type: string
    format: json
  ArrayOfVnfd:
    type: array
    items:
      $ref: "#/definitions/VnfDescriptor"
  ResponseDetails:
    type: object
    properties:
      detail:
        type: string
      status:
        type: integer
      code:
        type: string
    required:
      - status
      - detail
  VnfdPackage:
    type: string
    format: binary
  NsdPackage:
    type: string
    format: binary
  Vim:
    type: object
    properties:
      name:
        type: string
        example: "malagacore"
      type:
        type: string
        example: "openstack"
      location:
        type: string
        example: "core"
  VimList:
    type: array
    items:
      $ref: "#/definitions/Vim"
  Experiment_descriptor:
    type: object
    properties:
      Id:
        type: integer
        format: int64
        example: 123
      Name:
        type: string
        example: "sfafd"
      User:
        type: integer
        format: int64
        example: 12345
      Platform:
        type: string
        example: "malaga"
      TestCases:
        type: array
        example:
          - "TC1"
          - "TC2"
        items:
          type: string
      UEs:
        type: array
        example:
          - "UE1"
          - "UE2"
        items:
          type: string
      Slice:
        type: string
        example: "slice_id"
      NS:
        type: string
        example: "ns_id"
      NS_Placement:
        type: string
        example: "Edge"
      Limited:
        type: boolean
        example: true
      Type_experiment:
        type: boolean
        example: false
      Scenario:
        type: array
        example:
          - "scenario1"
          - "scemarop2"
        items:
          type: string
      Application:
        type: array
        example:
          - "app1"
        items:
          type: string
      Attended:
        type: boolean
        example: true
      Reservation_time:
        type: integer
        format: int64
        example: 60
  Object_id:
    type: object
    properties:
      _id:
        type: string
        example: "5e23602463013ef934bff6e5"
  ArrayOfExperiments:
    type: array
    items:
      $ref: "#/definitions/Mongo_experiment_descriptor"
  Mongo_experiment_descriptor:
    type: object
    properties:
      _id:
        type: string
        example: "5e22e33fc72cffeca34f72a3"
      Id:
        type: integer
        format: int64
        example: 123
      Name:
        type: string
        example: "sfafd"
      User:
        type: integer
        format: int64
        example: 12345
      Platform:
        type: string
        example: "malaga"
      TestCases:
        type: array
        example:
          - "TC1"
          - "TC2"
        items:
          type: string
      UEs:
        type: array
        example:
          - "UE1"
          - "UE2"
        items:
          type: string
      Slice:
        type: string
        example: "slice_id"
      NS:
        type: string
        example: "ns_id"
      NS_Placement:
        type: string
        example: "Edge"
      Limited:
        type: boolean
        example: true
      Type_experiment:
        type: boolean
        example: false
      Scenario:
        type: array
        example:
          - "scenario1"
          - "scemarop2"
        items:
          type: string
      Application:
        type: array
        example:
          - "app1"
        items:
          type: string
      Attended:
        type: boolean
        example: true
      Reservation_time:
        type: integer
        format: int64
        example: 60      
