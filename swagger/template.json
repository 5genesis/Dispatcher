
openapi: 3.0.1
info:
  title: 5GENESIS Dispatcher Swagger
  description: Swagger 5GENESIS Dispatcher
  termsOfService: http://swagger.io/terms/
  contact:
    email: javier.melian@atos.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
  
servers:
- url: http://DISPATCHER:8082/

tags:
- name: MANO
  description: MANO catalogue operations
- name: Validator
  description: Experiment descriptor validation and network service validation (VNFD
    + NSD)
- name: Auth
  description: Operations for users in order to access to the different microservices
- name: 'Auth: Admin Functions'
  description: Operations for Admin for managing the  user Auth
  
paths:
  /mano/vnfd:
    get:
      tags:
      - MANO
      summary: List all available VNFDs
      description: List all available VNFDs as a json collection
      operationId: listVNFDs
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: Invalid status value
          content: {}
      security:
      - bearerAuth: []
    post:
      tags:
      - MANO
      summary: Add a new VNFD to the catalogue
      operationId: addVNFD
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - vnfd
              properties:
                vnfd:
                  type: string
                  description: VNFD Package
                  format: binary
        required: true
      responses:
        201:
          description: VNFD created
          content: {}
        405:
          description: Invalid input
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        409:
          description: Conflict - VNFD already present
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - bearerAuth: []
  /mano/vnfd/{vnfdId}:
    get:
      tags:
      - MANO
      summary: Find VNFD by id
      description: Returns a single VNFD
      operationId: getVNFDById
      parameters:
      - name: vnfdId
        in: path
        description: ID of VNFD to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: VNFD not found
          content: {}
      security:
      - bearerAuth: []
    delete:
      tags:
      - MANO
      summary: Deletes a VNFD
      description: Deletes a VNFD given its _id
      operationId: deleteVNFD
      parameters:
      - name: vnfdId
        in: path
        description: VNFD _id to delete
        required: true
        schema:
          type: string
      responses:
        204:
          description: VNFD successfully deleted
          content: {}
        400:
          description: Invalid _ID supplied
          content: {}
        404:
          description: VNFD not found
          content: {}
      security:
      - bearerAuth: []
  /mano/nsd:
    get:
      tags:
      - MANO
      summary: List all available NSDs
      description: List all available NSDs as a json collection
      operationId: listNSDs
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: Invalid status value
          content: {}
      security:
      - bearerAuth: []
    post:
      tags:
      - MANO
      summary: Add a new NSD to the catalogue
      operationId: addNSD
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - nsd
              properties:
                nsd:
                  type: string
                  description: NSD Package
                  format: binary
        required: true
      responses:
        201:
          description: NSD created
          content: {}
        405:
          description: Invalid input
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        409:
          description: Conflict - VNFD already present
          content: {}
        422:
          description: Unprocessable entity
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - bearerAuth: []
  /mano/nsd/{nsdId}:
    get:
      tags:
      - MANO
      summary: Find NSD by name
      description: Returns a single NSD identified by its name
      operationId: getNSDByName
      parameters:
      - name: nsdId
        in: path
        description: Name of the NSD to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content: {}
        400:
          description: Invalid NSD name supplied
          content: {}
        404:
          description: NSD not found
          content: {}
      security:
      - bearerAuth: []
    delete:
      tags:
      - MANO
      summary: Deletes an NSD by _ID
      operationId: deleteNSD
      parameters:
      - name: nsdId
        in: path
        description: NSD id to delete
        required: true
        schema:
          type: string
      responses:
        204:
          description: NSD successfully deleted
          content: {}
        400:
          description: Invalid NS _ID supplied
          content: {}
        404:
          description: NSD not found
          content: {}
      security:
      - bearerAuth: []
  /mano/image:
    post:
      tags:
      - MANO
      summary: Upload an image file in the VIM
      operationId: addImage
      parameters:
      - name: disk_format
        in: query
        description: 'Disk format: raw, qcow2...'
        required: true
        schema:
          type: string
      - name: container_format
        in: query
        description: 'Container format: bare'
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - image
              properties:
                image:
                  type: string
                  description: Image file
                  format: binary
        required: true
      responses:
        201:
          description: 'Image uploaded. Image status: active'
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        413:
          description: File too large
          content: {}
        500:
          description: Internal server error - Service is not accessible
          content: {}
      security:
      - bearerAuth: []
  /validator/validate/ed:
    post:
      tags:
      - Validator
      summary: Validate Experiment descriptor
      operationId: validateED
      requestBody:
        description: Experiment descriptor in JSON format
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment_descriptor'
        required: true
      responses:
        200:
          description: Successful validation
          content: {}
        400:
          description: Invalid input
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Entry badly formed
          content: {}
      security:
      - bearerAuth: []
      #x-codegen-request-body-name: body
  /validator/onboard/ed:
    post:
      tags:
      - Validator
      summary: Validate Experiment descriptor and onboard it in the ELCM
      operationId: onboardED
      requestBody:
        description: Experiment descriptor in JSON format
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Experiment_descriptor'
        required: true
      responses:
        200:
          description: Successful validation
          content: {}
        400:
          description: Invalid input
          content: {}
        500:
          description: Entry badly formed
          content: {}
      security:
      - bearerAuth: []
      #x-codegen-request-body-name: body
  /validator/validate/vnfd:
    post:
      tags:
      - Validator
      summary: Validate VNFD
      operationId: validateVNFD
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - vnfd
              properties:
                vnfd:
                  type: string
                  description: VNFD Package
                  format: binary
        required: true
      responses:
        201:
          description: VNFD created
          content: {}
        400:
          description: Descriptor with failures
          content: {}
        405:
          description: Invalid input
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - bearerAuth: []
  /validator/onboard/vnfd:
    post:
      tags:
      - Validator
      summary: Validate VNFD and add it to the catalogue
      operationId: onboardVNFD
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - vnfd
              properties:
                vnfd:
                  type: string
                  description: VNFD Package
                  format: binary
        required: true
      responses:
        201:
          description: VNFD created
          content: {}
        400:
          description: Descriptor with failures
          content: {}
        405:
          description: Invalid input
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        409:
          description: Conflict - VNFD already present
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - bearerAuth: []
  /validator/validate/nsd:
    post:
      tags:
      - Validator
      summary: Validate NSD
      operationId: validateNSD
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - nsd
              properties:
                nsd:
                  type: string
                  description: NSD Package
                  format: binary
        required: true
      responses:
        201:
          description: NSD created
          content: {}
        400:
          description: Descriptor with failures
          content: {}
        405:
          description: Invalid input
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - bearerAuth: []
  /validator/onboard/nsd:
    post:
      tags:
      - Validator
      summary: Validate NSD and add it to the catalogue
      operationId: onboardNSD
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - nsd
              properties:
                nsd:
                  type: string
                  description: NSD Package
                  format: binary
        required: true
      responses:
        201:
          description: NSD created
          content: {}
        400:
          description: Descriptor with failures
          content: {}
        405:
          description: Invalid input
          content: {}
        406:
          description: Not acceptable - File not valid
          content: {}
        409:
          description: Conflict - VNFD already present
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - bearerAuth: []
  /auth/get_token:
    get:
      tags:
      - Auth
      summary: Get token
      description: 'TODO: Add Description'
      operationId: Gettoken
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
      security:
      - basicAuth: []
      - bearerAuth: []
  /auth/change_password:
    put:
      tags:
      - Auth
      summary: Change Password
      description: 'TODO: Add Description'
      operationId: ChangePassword
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - password
              properties:
                password:
                  type: string
                  description: ""
        required: true
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
      security:
      - basicAuth: []
      - bearerAuth: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      description: 'TODO: Add Description'
      operationId: RegisterUser
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - email
              - password
              - username
              properties:
                password:
                  type: string
                  description: ""
                username:
                  type: string
                  description: ""
                email:
                  type: string
                  description: ""
        required: true
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
  /auth/login:
    get:
      tags:
      - Auth
      summary: LogIn
      description: 'TODO: Add Description'
      operationId: LogIn
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
      security:
      - basicAuth: []
      - bearerAuth: []
  /auth/recover_password:
    put:
      tags:
      - Auth
      summary: Recover Password
      description: 'TODO: Add Description'
      operationId: RecoverPassword
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - email
              properties:
                email:
                  type: string
                  description: ""
        required: true
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
  /auth/show_users:
    get:
      tags:
      - 'Auth: Admin Functions'
      summary: Show Users
      description: 'TODO: Add Description'
      operationId: ShowUsers
      parameters:
      - name: verbose
        in: query
        required: true
        schema:
          type: boolean
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
      security:
      - basicAuth: []
  /auth/drop_db:
    delete:
      tags:
      - 'Auth: Admin Functions'
      summary: Drop DB
      description: 'TODO: Add Description'
      operationId: DropDB
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
      security:
      - basicAuth: []
  /auth/delete_user/{username}:
    delete:
      tags:
      - 'Auth: Admin Functions'
      summary: Delete User
      description: 'TODO: Add Description'
      operationId: DeleteUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content: {}
      deprecated: false
      security:
      - basicAuth: []
components:
  schemas:
    Experiment_descriptor:
      type: object
      properties:
        Id:
          type: integer
          format: int64
          example: 123
        Name:
          type: string
          example: sfafd
        User:
          type: integer
          format: int64
          example: 1234
        Platform:
          type: string
          example: malaga
        TestCases:
          type: array
          example:
          - TC1
          - TC2
          items:
            type: string
        UEs:
          type: array
          example:
          - UE1
          - UE2
          items:
            type: string
        Slice:
          type: string
          example: slice_id
        NS:
          type: string
          example: ns_id
        NS_Placement:
          type: string
          example: Edge
        Limited:
          type: boolean
          example: true
        Type_experiment:
          type: boolean
          example: false
        Scenario:
          type: array
          example:
          - scenario1
          - scemarop2
          items:
            type: string
        Application:
          type: array
          example:
          - app1
          items:
            type: string
        Attended:
          type: boolean
          example: true
        Reservation_time:
          type: integer
          format: int64
          example: 60
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
      
