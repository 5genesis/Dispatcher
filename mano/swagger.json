swagger: "2.0"
info:
  description: Swagger 5GENESIS MANO Wrapper
  version: 1.0.0
  title: 5GENESIS MANO Wrapper Swagger
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: javier.melian@atos.net
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5002"
basePath: /
tags:
  - name: VNFD
    description: VNFD catalogue operations
  - name: NSD
    description: NSD catalogue operations
  - name: VIM
    description: VIM related operations
schemes:
  - http
paths:
  /vnfd:
    post:
      tags:
        - VNFD
      summary: Add a new VNFD to the catalogue
      description: ""
      operationId: addVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
      responses:
        "201":
          description: VNFD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ProblemDetails"
        "409":
          description: Conflict - VNFD already present
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
    get:
      tags:
        - VNFD
      summary: List all available VNFDs
      description: List all available VNFDs as a json collection
      operationId: listVNFDs
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ArrayOfVnfd"
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
  "/vnfd/{vnfdId}":
    get:
      tags:
        - VNFD
      summary: Find VNFD by id
      description: Returns a single VNFD
      operationId: getVNFDById
      produces:
        - application/json
      parameters:
        - name: vnfdId
          in: path
          description: ID of VNFD to return
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/VnfDescriptor"
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/String"
        "500":
          description: Internal server error - Network problems
    delete:
      tags:
        - VNFD
      summary: Deletes a VNFD
      description: Deletes a VNFD given its _id
      operationId: deleteVNFD
      produces:
        - application/json
      parameters:
        - name: vnfdId
          in: path
          description: VNFD _id to delete
          required: true
          type: string
      responses:
        "204":
          description: VNFD successfully deleted
        "404":
          description: VNFD not found
          schema:
            $ref: "#/definitions/ProblemDetails"
        "409":
          description: Conflict - VNFD referenced by at least one NSD
          schema:
            $ref: "#/definitions/ProblemDetails"
    put:
      tags:
        - VNFD
      summary: Updates a VNFD providing the new VNFD package and the _ID of the old one that is being updated
      description: ""
      operationId: updateVNFD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: vnfd
          in: formData
          description: VNFD Package
          required: true
          type: file
        - name: vnfdId
          in: path
          description: VNFD _id to update
          required: true
          type: string
      responses:
        "201":
          description: VNFD successfully updated
        "400":
          description: Invalid VNFD _ID supplied
        "404":
          description: VNFD not found
        "409":
          description: There was a conflict when updating this VNFD
  /nsd:
    post:
      tags:
        - NSD
      summary: Add a new NSD to the catalogue
      description: ""
      operationId: addNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
      responses:
        "201":
          description: NSD created
          schema:
            $ref: "#/definitions/ObjectID"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/ProblemDetails"
        "409":
          description: Conflict - NSD already present
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
    get:
      tags:
        - NSD
      summary: List all available NSDs
      description: List all available NSDs as a json collection
      operationId: listNSDs
      produces:
        - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ArrayOfNsd"
        "400":
          description: Invalid status value
          schema:
            $ref: "#/definitions/ProblemDetails"
        "500":
          description: Internal server error - Network problems
  "/mano/nsd/{nsdId}":
    get:
      tags:
        - NSD
      summary: Find NSD by name
      description: Returns a single NSD identified by its name
      operationId: getNSDByName
      produces:
        - application/json
      parameters:
        - name: nsdId
          in: path
          description: Name of the NSD to return
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/NsDescriptor"
        "404":
          description: NSD not found
        "500":
          description: Internal server error - Network problems
    delete:
      tags:
        - NSD
      summary: Deletes an NSD by _ID
      description: ""
      operationId: deleteNSD
      produces:
        - application/json
      parameters:
        - name: nsdId
          in: path
          description: NSD id to delete
          required: true
          type: string
      responses:
        "204":
          description: NSD successfully deleted
        "400":
          description: Invalid NS _ID supplied
        "404":
          description: NSD not found
    put:
      tags:
        - NSD
      summary: Updates an NSD providing the new NSD package and the _ID of the old one that is being updated
      description: ""
      operationId: updateNSD
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: nsd
          in: formData
          description: NSD Package
          required: true
          type: file
        - name: nsdId
          in: path
          description: NSD _id to update
          required: true
          type: string
      responses:
        "201":
          description: NSD successfully updated
        "400":
          description: Invalid NS _ID supplied
        "404":
          description: NSD not found
        "409":
          description: There was a conflict when updating this NSD
          schema:
            $ref: "#/definitions/ProblemDetails"
  /vims:
    get:
      tags:
        - VIM
      summary: Retrieves the list of registered VIMs in the mano.conf file 
      description: ""
      operationId: getVIMs
      produces:
        - application/json
      responses:
        "200":
          description: List of VIMs
          schema:
            $ref: "#/definitions/VimList"
        "400":
          description: Bad request
  /image/{vim_name}:
    post:
      tags:
        - VIM
      summary: Upload an image file in the VIM
      description: ""
      operationId: addImage
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: image
          in: formData
          description: Image file
          required: true
          type: file
        - name: vim_name
          in: path
          description: Name of the VIM
          required: true
          type: string
        - name: disk_format
          in: query
          description: "Disk format: raw, qcow2..."
          required: true
          type: string
        - name: container_format
          in: query
          description: "Container format: bare"
          required: true
          type: string
      responses:
        "201":
          description: "Image uploaded. Image status: active"
          schema:
            $ref: "#/definitions/String_image"
        "406":
          description: Not acceptable - File not valid
        "413":
          description: File too large
        "500":
          description: Internal server error - Service is not accessible
definitions:
  ObjectID:
    type: object
    properties:
      id:
        type: string
        example: "123e4567-e89b-12d3-a456-426655440000"
  NsDescriptor:
    type: string
    format: json
  ArrayOfNsd:
    type: array
    items:
      $ref: "#/definitions/NsDescriptor"
  VnfDescriptor:
    type: string
    format: json
  ArrayOfVnfd:
    type: array
    items:
      $ref: "#/definitions/VnfDescriptor"
  ProblemDetails:
    type: object
    properties:
      detail:
        type: string
        example: "invalid file content file could not be opened successfully"
      status:
        type: integer
        example: 400
      code:
        type: string
        example: "BAD_REQUEST"
    required:
      - status
      - detail
  VnfdPackage:
    type: string
    format: binary
  NsdPackage:
    type: string
    format: binary
  String:
    type: string
  String_ok:
    type: string
    example: "ok"
  String_image:
    type: string
    example: "Image status: active"
  Vim:
    type: object
    properties:
      name:
        type: string
        example: "malagacore"
      type:
        type: string
        example: "openstack"
      location:
        type: string
        example: "core"
  VimList:
    type: array
    items:
      $ref: "#/definitions/Vim"
